{"version":3,"sources":["ErrorMessage.js","App.js","index.js"],"names":["ErrorMessage","message","className","xmlns","fill","viewBox","d","networks","energyweb","chainId","Number","toString","chainName","nativeCurrency","name","symbol","decimals","rpcUrls","blockExplorerUrls","volta","changeNetwork","a","networkName","setError","window","ethereum","Error","request","method","params","App","useState","error","handleNetworkSwitch","networkChanged","console","log","useEffect","on","removeListener","onClick","rootElement","document","getElementById","ReactDOM","render"],"mappings":"mOAAe,SAASA,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QACrC,OAAKA,EAGH,qBAAKC,UAAU,yBAAf,SACE,sBAAKA,UAAU,SAAf,UACE,qBACEC,MAAM,6BACNC,KAAK,OACLC,QAAQ,YACRH,UAAU,8BAJZ,SAME,sBACE,iBAAe,QACf,kBAAgB,QAChB,eAAa,IACbI,EAAE,qGAGN,gCAAQL,SAlBO,KCEvB,IAAMM,EAAW,CACfC,UAAW,CACTC,QAAQ,KAAD,OAAOC,OAAO,KAAMC,SAAS,KACpCC,UAAW,YACXC,eAAgB,CACdC,KAAM,YACNC,OAAQ,MACRC,SAAU,IAEZC,QAAS,CAAC,8BACVC,kBAAmB,CAAC,oCAEtBC,MAAO,CACLV,QAAQ,KAAD,OAAOC,OAAO,OAAOC,SAAS,KACrCC,UAAW,QACXC,eAAgB,CACdC,KAAM,QACNC,OAAQ,KACRC,SAAU,IAEZC,QAAS,CAAC,oCACVC,kBAAmB,CAAC,2CAIlBE,EAAa,uCAAG,+BAAAC,EAAA,yDAASC,EAAT,EAASA,YAAaC,EAAtB,EAAsBA,SAAtB,SAEbC,OAAOC,SAFM,sBAEU,IAAIC,MAAM,0BAFpB,uBAGZF,OAAOC,SAASE,QAAQ,CAC5BC,OAAQ,0BACRC,OAAQ,CAAC,eAEFtB,EAASe,OAPA,uDAYlBC,EAAS,KAAItB,SAZK,yDAAH,sDAgBJ,SAAS6B,IACtB,MAA0BC,qBAA1B,mBAAOC,EAAP,KAAcT,EAAd,KAEMU,EAAmB,uCAAG,WAAOX,GAAP,SAAAD,EAAA,6DAC1BE,IAD0B,SAEpBH,EAAc,CAAEE,cAAaC,aAFT,2CAAH,sDAKnBW,EAAiB,SAACzB,GACtB0B,QAAQC,IAAI,CAAE3B,aAWhB,OARA4B,qBAAU,WAGR,OAFAb,OAAOC,SAASa,GAAG,eAAgBJ,GAE5B,WACLV,OAAOC,SAASc,eAAe,eAAgBL,MAEhD,IAGD,sBAAKhC,UAAU,8EAAf,UACE,uBAAMA,UAAU,WAAhB,UACE,oBAAIA,UAAU,kDAAd,uDAGA,sBAAKA,UAAU,OAAf,UACE,wBACEsC,QAAS,kBAAMP,EAAoB,cACnC/B,UAAU,+EAFZ,iCAMA,wBACEsC,QAAS,kBAAMP,EAAoB,UACnC/B,UAAU,6FAFZ,6BAMA,cAACF,EAAD,CAAcC,QAAS+B,UAG3B,qCArBF,OAqBqB,qCACnB,qBAAI9B,UAAU,kDAAd,uBACY,4CADZ,YAC8C,4BAAIY,aCnFxD,IAAM2B,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,cAAC,aAAD,UACE,cAACf,EAAD,MAEFW,K","file":"static/js/main.660b3306.chunk.js","sourcesContent":["export default function ErrorMessage({ message }) {\n  if (!message) return null;\n\n  return (\n    <div className=\"alert alert-error mt-5\">\n      <div className=\"flex-1\">\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          fill=\"none\"\n          viewBox=\"0 0 24 24\"\n          className=\"w-6 h-6 mx-2 stroke-current\"\n        >\n          <path\n            stroke-linecap=\"round\"\n            stroke-linejoin=\"round\"\n            stroke-width=\"2\"\n            d=\"M18.364 18.364A9 9 0 005.636 5.636m12.728 12.728A9 9 0 015.636 5.636m12.728 12.728L5.636 5.636\"\n          ></path>\n        </svg>\n        <label>{message}</label>\n      </div>\n    </div>\n  );\n}\n","import { useState, useEffect } from \"react\";\nimport ErrorMessage from \"./ErrorMessage\";\n\nconst networks = {\n  energyweb: {\n    chainId: `0x${Number(0xf6).toString(16)}`,\n    chainName: \"EnergyWeb\",\n    nativeCurrency: {\n      name: \"EnergyWeb\",\n      symbol: \"EWT\",\n      decimals: 18\n    },\n    rpcUrls: [\"https://rpc.energyweb.org/\"],\n    blockExplorerUrls: [\"https://explorer.energyweb.org/\"]\n  },\n  volta: {\n    chainId: `0x${Number(73799).toString(16)}`,\n    chainName: \"Volta\",\n    nativeCurrency: {\n      name: \"Volta\",\n      symbol: \"VT\",\n      decimals: 18\n    },\n    rpcUrls: [\"https://volta-rpc.energyweb.org/\"],\n    blockExplorerUrls: [\"https://volta-explorer.energyweb.org/\"]\n  }\n};\n\nconst changeNetwork = async ({ networkName, setError }) => {\n  try {\n    if (!window.ethereum) throw new Error(\"No crypto wallet found\");\n    await window.ethereum.request({\n      method: \"wallet_addEthereumChain\",\n      params: [\n        {\n          ...networks[networkName]\n        }\n      ]\n    });\n  } catch (err) {\n    setError(err.message);\n  }\n};\n\nexport default function App() {\n  const [error, setError] = useState();\n\n  const handleNetworkSwitch = async (networkName) => {\n    setError();\n    await changeNetwork({ networkName, setError });\n  };\n\n  const networkChanged = (chainId) => {\n    console.log({ chainId });\n  };\n\n  useEffect(() => {\n    window.ethereum.on(\"chainChanged\", networkChanged);\n\n    return () => {\n      window.ethereum.removeListener(\"chainChanged\", networkChanged);\n    };\n  }, []);\n\n  return (\n    <div className=\"credit-card w-full lg:w-1/2 sm:w-auto shadow-lg mx-auto rounded-xl bg-white\">\n      <main className=\"mt-4 p-4\">\n        <h1 className=\"text-xl font-semibold text-gray-700 text-center\">\n          Energy Web MetaMask configuration toolbox\n        </h1>\n        <div className=\"mt-4\">\n          <button\n            onClick={() => handleNetworkSwitch(\"energyweb\")}\n            className=\"mt-2 mb-2 btn btn-primary submit-button focus:ring focus:outline-none w-full\"\n          >\n            Switch to EnergyWeb\n          </button>\n          <button\n            onClick={() => handleNetworkSwitch(\"volta\")}\n            className=\"mt-2 mb-2 bg-warning border-warning btn submit-button focus:ring focus:outline-none w-full\"\n          >\n            Switch to Volta\n          </button>\n          <ErrorMessage message={error} />\n        </div>\n      </main>\n      <p>&nbsp;</p>&nbsp;<p>&nbsp;</p>\n      <h1 className=\"text-sm font-semibold text-gray-700 text-center\">\n        Made with <strong>&hearts;</strong> by bl0x <p>{name}</p>\n      </h1>\n    </div>\n  );\n}\n// JavaScript Document\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}